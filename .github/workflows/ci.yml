name: CI

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      -
        uses: actions/checkout@v4
      -
        if: contains(matrix.os, 'ubuntu')
        uses: ./.github/actions/free-disk-space
      -
        if: contains(matrix.os, 'ubuntu')
        uses: ./.github/actions/ubuntu-dependencies
      -
        if: contains(matrix.os, 'macos')
        uses: ./.github/actions/macos-dependencies
      -
        name: run build
        run: cargo build
        timeout-minutes: 90
      -
        name: run clippy
        run: |
          SKIP_WASM_BUILD=1 cargo clippy --all-targets --locked --workspace --quiet
          SKIP_WASM_BUILD=1 cargo clippy --all-targets --all-features --locked --workspace --quiet
        timeout-minutes: 30
      -
        name: run tests
        run: SKIP_WASM_BUILD=1 cargo test
        timeout-minutes: 15
      -
        name: build docs
        run: SKIP_WASM_BUILD=1 cargo doc --workspace --no-deps
        timeout-minutes: 15

  run-node:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      -
        uses: actions/checkout@v4
      -
        if: contains(matrix.os, 'ubuntu')
        uses: ./.github/actions/free-disk-space
      -
        if: contains(matrix.os, 'ubuntu')
        uses: ./.github/actions/ubuntu-dependencies
      -
        if: contains(matrix.os, 'macos')
        uses: ./.github/actions/macos-dependencies
      -
        name: build the node individually in release mode
        run: cargo build --package evolute-node --release
        timeout-minutes: 90
      -
        name: ensure the node is producing blocks
        run: |
          ./target/release/evolute-node --dev 2>&1 | tee out.txt &
          until curl -s '127.0.0.1:9944'; do sleep 5; done
          until cat out.txt | grep -s "Imported #2"; do sleep 5; done
        shell: bash
        timeout-minutes: 5

  build-docker:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v4
      -
        uses: ./.github/actions/free-disk-space
      -
        id: vars
        run: echo "git_sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      -
        name: build dockerfile
        run: docker build . -t ${{ steps.vars.outputs.git_sha_short }}
        timeout-minutes: 90
